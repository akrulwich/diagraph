This
  This is 'Diagraph', a diagraph about diagraph.

Diagraph
  What sort of thing is diagraph?
    Diagraph is an abstract data type.
    A diagraph is a directed graph comprised of interconnected trees. 
  What is a diagraph?
    Diagraph is a directed graph traversals across which are explanations.
    A diagraph represents a set of possible explanations. 
  What is diagraph for?
    Diagraph is a medium for representing explanatory information.
  Why is diagraph useful?
    Diagraph provides logarithmic-time access to a corpus of explanatory information.  
  What does a diagraph represent?
    A diagraph represents the interface of an explanation-producing system.
    A diagraph maps a set of requests for explanation to a particular set of explanations.
    A diagraph represents all possible outputs of an explanatory system. 
    A diagraph models only the interface of an explanatory system.
      It ignores the internal implementation.
      It represents only what goes in and what comes out, not what goes on inside.
    A diagraph can model any system that responds to requests for explanation, 
      such as teachers, books, search engines, or libraries.
  What analysis can diagraph help us make?
    Explaining the differences in explanation preformance between experts and non-experts.  
    Expressing the shared generic interfaces of different explanatory systems. 

Definition of diagraph
  A diagraph is a key-value store, 
      the keys of which are diagraphic paths.
      the values of which are diagraphic trees.
  The key represents a path prefix to the nodes of the associated tree.

Diagraphic tree
  A diagraphic tree is a tree of diagraphic nodes, which have a string containing one or more space-delimited syntactic elements. 
  A diagraphic tree is at once a graph tree of nodes and a syntax tree of natural language strings. 
  The syntactic structure of a diagraphic tree is represented implicitly the relation between the syntactic elements.
  The pragmatic structure of a diagraphic tree is the grouping of particular syntactic elements together into particular nodes.
  A diagraphic tree is a kind of trie that represents a set of sentences which share a subject. 
  In a diagraphic tree, child nodes represent things that could follow the parent nodes in an explanation.
    Child nodes might for example specify or interpret their parent nodes. 
  Any diagraphic tree could be rendered into one very long sentence. 
    The breaks between particular nodes mirrors the breaks between particular sentences in explanation.
  A diagraphic tree might have a subject element-node, followed by a predicate element-node, followed by conjunction element-nodes, ending in period-terminated element node, a composition node, or an alias.
  A tree does not include aliased subtrees, only nodes primarily stored under the tree's key.
  The tree is the explicit structure stored in memory, not the implicit continous structure formed with aliases. 

Diagraphic nodes
  Diagraphic nodes are strings of natural language text. 
  Diagraphic nodes contain one or more syntactic elements. 
  Diagraphic nodes represent the meaningful units of an explanation. 
    No explanation should ever include only part of a node's text, or there should be two nodes.
  Where a diagraphic node breaks corresponds to pragmatic sentences in conversation. 
  Children of diagraphic nodes represent things that could follow it in an explanation.
  Requests made to a path will return the entire node at that path.  
  Nodes are refactored when a new node is added at a path that enters an existing node.
    Nodes are not refactored merely by adding two nodes with the same prefix to the same path.

Diagraphic elements
  A diagraphic element is a minimal syntactic element, like a word or phrase.
  A element-node tree is machine-readable, and can be used by all diagraphic functions.

Diagraphic clauses
  A clause is a subject and series of predicates ending in a comma, which may begin with a conjunction.
  A clause-node tree can be automatically parsed, and can be used by some diagraphic functions.

Diagraphic compositions
  A text of one or more sentences that cannot be meaningfully subdivided.
  A composition-node tree can only be automatically displayed.
  Compositions don't nest.
  Compositions come after a period, and represent a new sentence.
    Compositions to not add to the path. 

Diagraphic paths
  A path is a series of syntactic elements divided into clauses.
  The division of syntactic elements between nodes does not affect path formation.
  A path can be a sole topic or subject.
  A diagraphic URL path would replace commas with forward-slashes.

Diagraphic references
  A diagraphic reference is a correspondance between a node and a key. 
  The explanation of diagraphic references produces derivation. 

Diagraphic aliases
  An alias is a correspondance between a path and a key.
  One might refactor a large tree into several smaller trees using aliases. 

Diagraphic address
  Diagraphic nodes have addresses in a particular diagraph.
  Diagraphic nodes have one primary and many secondary addresses.
  The primary address is the path from the key where a node is actually stored in a diagraph to that node.
  A secondary address is a path from some other key that advances through aliases.
  Public-language nodes may have a generally agreed upon public-language address. 

Explanations
  An explanation is a traversal of alternating clauses and conjunctions.
  Explanations may span connected diagraphic trees over aliases.  

Derivation
  A derivation is a discontinous embedded subexplanation of an element of a clause being explained. 

Particlar diagraph
  Diagraph concerning singular subjects. 
  The roots of particular categories instantiate with reference to a generic. 
    All children of the particular must correspond to generically sanctioned predicates. 

Generic diagraph
  Generic diagraph is a generic subject and all possible predicates. 
  Generic trees begin with "there is" or "there are".
  Generic diagraph is useful in comparing two particular diagraphs, eg determining if predicate A in one diagraph means the same thing as predicate B in another.
  Generic subordination, eg, A/B, means all Bs are A but only some As are B.
  A schema or definition is a configuration of generic diagraph, of the form A/B/C/is a D.

Diagraphic predication
  A predication is a correspondance between a particular predicate and a predicate of the generic type. 
  Predication as state in a generic DFA.

Genericizing a clause
  I genericize a particular clause by finding the path of the generic clause that sanctions the use of the predicate. 


Diagraph script
  Diagraph script is a text format that represents a diagraph. 
  Diagaph script is the canonical representation of a diagraph. 
    Other data structures merely implement the constructs of diagraph script.
  Lines of a diagraph script file represent nodes of a diagraph.
  Indendation in a diagraph script file represents the hierarchy of a diagraph. 
  Unindented lines of diagraph script represent diagraphic paths.
    The paths may not correspond exactly to the path-keys of the diagraph.
      A diagraph might be more modularly refactored, and the diagraph script intended for a wider audience. 
  Top-level indentations under a key represent the roots of a diagraphic category. 
  Diagraph script is comprised of blocks and units.
    A block of diagraph script is one atomic write operation.
      Blocks can be seperated by one blank line for clarity.
      Blocks would often begin at the indentation of the previous block. 
      A block of diagraph script might correspond to a prose paragraph.
    A section of diagraph script is a set of related blocks. 
      Sections can be seperated by two or three blank lines for clarity. 
      Sections would not usually begin indented. 
      A section of diagraph script might correspond to a prose article or chapter.



Diagraph production
Individual diagraph production
Group diagraph production
Asynchronous diagraph production
  Diagraph can be produced by uncoordinated groups that are distributed in space or time. 
Diagraph merges
  Two diagraphs are merged into one that contains the paths of both diagraphs, refactoring nodes that share prefixes. 
Adversarial diagraph production
  Or diagraphic debate. 
  Diagraph production in which individuals produce a discussion diagraph.
  By creating a node that contains a prefix of an existing node, parties can force an opponent's node to be refactored, reducing the effect. 
  Each party wishes to include long expressive sentences, but also to occupy desirable paths. 



Discussion diagraph
  A diagraph produced synchronously by a group. 
  One can only add to a discussion diagraph. 
  Responses to particular articulations are preserved. 
Discourse diagraph
  A discourse diagraph is the hypothetical diagraph implicit in a corpus. 
  Responses to particular articulations are culled to produce an abstracted diagraph. 
Library diagraph
  A library diagraph is a diagraph that subsumes various other diagraphs. 
Ideographs
  An ideograph represents the possible explanations of an individual. 
Language diagraphs
  A langauge diagraph captures the generic information known to native speakers of a language.



Describing diagraphs
  Diagraphs can have depth, if many nodes are the roots of lower trees.
  Diagraphs can have context, if many trees are nodes in higher trees.
  A diagraph can subsume another. 
    One diagraphic tree subsumes another if it contains a node that can be parent to the other's root.
  A diagraph can reduce one diagraph to another.
  A diagraph can be coherant if all paths belong to a single refactored tree.



Applications of diagraph
Diagraph in Education
Diagraph in Journalism
Diagraph in Politics
Diagraph in Library Science
Diagraph in Academic Publishing



Diabots
  A diabot is any diagraphic agent. 
  A diabot is an agent that represents its knowledge as a diagraph. 
  A diabot knows N if it has the node N. 
  A diabot understands P if it has the path P. 

Diagraphic servers

Diagraphic requests
  Requests include a path, function, and optional input diagraph.
  The path serves as prefix for lines of the input diagraph.
Diagraphic responses
  Responses are rendered text.

Diagraphic interfaces
  Document mode
    Server-side generation
    Server-side assembly
  Correspondance mode
    Server-side generation
    Client-side assembly
  Interactive mode
    Client-side generation
    Client-side assembly

Diagraphic function environments
  Isomorphic
  Provide input stream as service
  Provide output stream as service
  Provides a WM service
    Push method
    Enqueue method
    Promote method
    By default caches to STM.
    By default checks STM for value on top of stack and fills in context if there's a match.
  STM
    STM is a cache that associates every value added to WM with its path. 
  LTM
    Connects to a data store or API.

Diagraphic function controllers
  Diagraphic function controllers are responsible for 
    taking the provided path and loading the tree into short-term memory, 
    perhaps setting the provided path as the initial item of working memory, 
    before each cycle, checking the function's satisfaction condition, 
    when the function is satisfied, putting new input into working memory,
    piping the instantantaneous values of WM to output as text.
  The controller runs the diagraphic function's configuration script.
    What the controller does with the path and input depends on the function. 


Diagraphic functions
  Diagraphic functions have a function body, a satisfaction condition, and a configuration script. 
  Diagraphic functions take a working memory stack of diagraph-script values.
  Diagraphic functions manipulate WM.

Particular diagraphic functions
  Terminating functions
    eg, Explain
  Nonterminating functions
    eg, consider
Diagraph-read
  Takes a path and returns the corresponding values. 
Diagraph-add
  Takes a diagraph script file and adds it to a diagraph at the specified path. 
    This involves lining up the paths of the file to the keys of the diagraph. 
  When a specified path goes partially into an existing node, the node is refactored.     
    Nodes are not refactored merely by adding two nodes with the same prefix.
Diagraph-interpret
  Takes a public language path and returns a first match in the particular diagraph.  
  Autocomplete is interactive dg-interpret.
Diagraph-explain 
  Takes a path specification in WM. 
  Diagraph-explain traverses the clauses of a tree. For each clause, if there is a element that is not in STM, it pushes it on the stack, otherwise, it states the clause and advances. 
  Dg-explain states the clauses and derives the references.
Diagraph-assess
  Shows the user a diagraphic key, has them produce an explanation in diagraph script, and preforms a comparison to the reference value. 
  Diagraph-assess is a companion function to diagraph-explain.
  An answer is correct if the user-provided predicate is equivalent to the reference predicate in the reference generic diagraph. 
Diagraph-review
  Diagraph-reivew puts whole paths of each node into one WM element.
  Diagraph-Review uses a breadth-first search. 
Diagraph-quiz
  Diagraph-quiz shows the user a node and has them produce a path. 
  Diagraph-quiz is a companion function to diagraph-review.
Diagraph-consider
  A hypothetical diagraphic function that preforms a breadth-first search on the generic inferences from a particular node, looking for collisions with existing LTM entries. 
  Consideration takes a fact and looks for particular secondary paths. 
  Consideration takes a fact and uses generic inferences to find candidate implications, marked with questions.
Diagraph-reflect
  A hypothetical diagraphic function that takes an entire diagraphic category and looks for a subsuming interpretation by looking for definitions that fit subsets of nodes.
  Reflection takes a fact and searches the generic diagraph for candidate interpretations.
  Reflection alternatingly describes an entire tree, inviting schemas.
  I keep a full description at the base of WM, and I push selective combinations onto the stack, inviting a STM trigger of a generic path. 


Other
  Diagraph
    A diagraph is not a document.
    A diagraph is not a hypertext.
    Diagraph does not represent embodied discussions.
      Diagraphic responses are of ideas and to ideas, rather than of people or writings to other people or writings. 
      Diagraphs can be formed by culling discussions.
  Propsecting
    Provisional compositions can become fragments which can become sentences which can become either clause-trees or final compositions.
  Qualitative computing
  Moderation as merger not mean
  The explanation market
    Market fragmentation between producers and consumers. 
  Diagraph as epistemic algorithm
  Diabots and personal reading
  Exhaustive diagraphs, which invite and address every articulation of an idea possible in the language
  Diagraphic dynamics
    How agents behave when diagraph transmission is so reliable and ubiquitous as to be inevitable. 
  Ostensive diagraph
    A diagraphic node may ostend to a resource referenced by address.

