This
  This is 'Diagraph', a diagraph about diagraph, a proposed data structure for storing explanation.


Diagraph
  A diagraph is a kind of abstract data type. 
  A diagraph is a form of media. 
  A diagraph is a model of the interface of an explanatory system
    A diagraph represents the interface of an explanation-producing system.
    A diagraph maps a set of requests for explanation to a particular set of explanations.
    A diagraph represents all possible outputs of an explanatory system. 
    A diagraph models only the interface of an explanatory system.
      It ignores the internal implementation.
      It represents only what goes in and what comes out, not what goes on inside.
    A diagraph can model systems that responds to requests for explanation, 
      such as teachers, books, search engines, or libraries.
  A diagraph represents a set of possible explanations. 
    Modeling a particular explanation as a diagraph involves making assumptions about what might have been said, or what might not have been said relative to other things. 
    A diagraph represents counterfactual explanations. 
  A diagraph is an explanation machine.
    It is a representation of the inputs and outputs like any abstract machine.
  The definition of diagraph involves two sorts of entity, 
    linguistic entities, like subjects, predicates, clauses, sentences, and explanations.
    data structures, like key-value pairs, nodes, and trees.
    The data structures are explicitly represented, and store natural-language text.
    The linguistic entities are implicitly represented, in the natural language text.
    The data structures and their properties supervene upon the linguistic entities and their properties.
      There should be no relationship between data structures that doesn't represent a prior relationship between linguistic entities.
    A diagraph is never proscriptive to the ordinary linguistic practices represented.
  A diagraph is not a document.
    Documents are an insufficiently abstract tool for reasoning about explanatory information 
    A diagraph is not a hypertext.
    Diagraph does not represent embodied discussions.
      Diagraphic responses are of ideas and to ideas, rather than of people or writings to other people or writings. 
      Diagraphs can be formed by culling discussions.

The definition of diagraph
  A diagraph is a key-value store, 
      in which the keys are diagraphic keys.
      in which the values are collections of diagraphic trees.
  Diagraphic keys represent ordinary language topics.
  Diagraphic trees represent ordinary language explanations.
  Diagraphic nodes represent ordinary language utterances.
  Diagraphic paths

Diagraphic keys
  A diagraphic key represents a grammatical topic. 

    Topics
      Topics are things like spaces, categories, sets, groups, topics, regions, eras, contexts.
      Children of a topic are members.
      Topics contain subjects.
        In a diagraph, the space that a thing is stored in is its context in that diagraph.
          Every thing in a diagraph is stored primarily in some context, but we do not necessarily give our full private path when explaning something, but rather begin at the subject.
            eg, if I have A/B/C, I might discuss with you .../B/C.
      Some things like countries are topics in one tree and subjects in another. 
      A tree with has a topic-root may have embedded trees with subject-roots.

  A diagraphic key is like a bookshelf in the library.

  The keys of a diagraph represent things that can be explained, such as topics or questions.
  There should be a key for every query the explainer can understand.
  A key of a diagraph is a diagraphic path prefix to the nodes of the associated tree.
  Every node belongs to one primary key.
  A node may be accessable via multiple keys through aliasing.
  A topic that is a precise path is a hack.
  Keys do not represent utterances of the explanation, but rather recognitions which are occasioned by the associated utterance. A diagraphic tree may reiterate its key, like a teacher repeating a question.
  In a diagraph, every key is a topic, and so it is like a bag of marbles.
  The keys of a diagraph are the contexts I can recognize.
  A key of a diagraph is like a space I recognize, and the subjects are what I remember being in that space.
  Being asked a questions is like recognizing a space.

Diagraphic tree
    Explanations
      An explanation is what is, for example, an essay, lecture, book, article, question-answer or story.
      An explanation is a represented in a diagraph by a collection of diagraphic trees.
      An explanation may span several diagraphic trees by crossing over aliases.  
      Explanations have an implicit diagraph, the single tree formed by combining all transmissions.
        Clauses of an explanation have a path relative to the diagraph of the explanation, which may not correspond to the diagraph of the explainer.

  Diagraphic tree roots are subjects. 
  A diagraphic tree is like a book in the library.
  A diagraphic subject is a diagraphic tree with that subject for a root.

  The hierarchy of a tree derives from the linguistic properties of the thing represented. For B to be child to A represents that B is a valid comment on A in the given context. 
  A diagraphic tree is a tree of diagraphic nodes, which have a string containing one or more space-delimited syntactic elements. 
  A diagraphic tree is at once a graph tree of nodes and a syntax tree of natural language strings. 
  The syntactic structure of a diagraphic tree is represented implicitly the relation between the syntactic elements.
  The pragmatic structure of a diagraphic tree is the grouping of particular syntactic elements together into particular nodes.
  A diagraphic tree is a kind of trie that represents a set of sentences which share a subject. 
  In a diagraphic tree, child nodes represent things that could follow the parent nodes in an explanation.
    Child nodes might for example specify or interpret their parent nodes. 
  Any diagraphic tree could be rendered into one very long sentence. 
    The breaks between particular nodes mirrors the breaks between particular sentences in explanation.
  A diagraphic tree might have a subject element-node, followed by a predicate element-node, followed by conjunction element-nodes, ending in period-terminated element node, a composition node, or an alias.
  A tree does not include aliased subtrees, only nodes primarily stored under the tree's key.
  The tree is the explicit structure stored in memory, not the implicit continous structure formed with aliases. 
  Germanity as constraint on subtrees
  A speaker's sentence changes subject at the point where their tree aliases. 
  Each diagraphic tree is an entry of the diagraph, under that particular key.
  If a prose document has 50 paragraphs, you could think of them as a linear progression from 1 to 50, or as a traversal of a tree. Things can behave as trees without being presented as trees.
  The relative ordering of siblings is not an explicit relationship of hierarchy or ordinal mapping, but rather represents mere relative priority.
  Children are prioritized, they are not ordered.

Diagraphic nodes
    Utterances

      Grammatical clauses correspond to diagraphic nodes, although not exactly.
        Several clauses may correspond to one node, or one clause to several nodes.

      A clause is a subject and series of predicates ending in a comma, which may begin with a conjunction.
      A clause-node tree can be automatically parsed, and can be used by some diagraphic functions.
      Diagraphic clauses are only implicitly represented.
  Diagraphic nodes are units of natural language text. 
  A diagraphic node represents a single hypothetical utterance.
  The breaks between diagraphic nodes represent facts about the possible explanations that the system can produce.
  Diagraphic nodes contain one or more syntactic elements. 
  Diagraphic nodes represent the meaningfully indivisible units of an explanation.
    A diagraphic node is a single-purpose text. 
    If only part of the node's text is required for a particular purpose, it should be two nodes.
    If a valid explanation could include only part of a node's text, it should be two nodes. 
    If a diagraphic path defines a functional category of information, a node at that path should minimally suffice for that particular function.
    A node should be functionally minimal.
  Where a diagraphic node breaks corresponds to pragmatic sentences in conversation. 
  Children of diagraphic nodes represent things that could follow it in an explanation.
  Requests made to a path will return the entire node or nodes at that path, never portions of a single node.
  Nodes are refactored when a new node is added at a path that enters an existing node.
    Nodes are not refactored merely by adding two nodes with the same prefix to the same path.
  Terminal nodes end with a period.

Diagraphic paths
    Introductory sentences
      A sentence is a series of clauses ending in a period. 
      Sentences after a terminal clause can form subtrees in a diagraphic tree.
      Diagraphic sentences are only implicitly represented.
  A diagraphic path is a comma or slash delimited string, ie sentence.
  The path does not include the key.

  A diagraphic path is the context for a node. If you just heard a node and didn't understand, what you would have failed to understand is the path.
  The topic is not in the path, although it can be, by having a sentence include a reference back to the topic that is the key of that path, but this is a hack.
  The key of a path is the key underwhich the path is stored.
  A path is a series of syntactic elements divided into clauses.
  The division of syntactic elements between nodes does not affect path formation.
  A path can be a sole topic or subject.
  A subject has a primary path in a given diagraph, and secondary paths through aliasing.
  A diagraphic URL path would replace commas with forward-slashes.
  A path from a known subject to an unknown subject is the latter's context.
  A public path may not be the same as a private path, which may have a longer antecedent context.
    If a public truncated path is sufficient for an understanding appropriate to some context, it is inappropriate to say that some greater context or the private path used by experts is the correct path, whereas some public path is incorrect. 
      This is the mistake made for example by a graduate student who explains the real numbers as one axis of the range of complex numbers – says who? If the real numbers can be used and described by themselves for the purposes of a particular discussion, then they are their own sufficient context. We might say of complex numbers that they include the real numbers, but we may not say of the real numbers that they belong to the definition of complex numbers. By the time one reaches the age of a professor, one has more modularly refactored one's knowledge, so that each concept can be used and explained individually or in very intentional combinations. The undergraduate, on the other hand, avoids drawing in unneccessary information simply by maintaining a prudent ignorance. 
  EG, T/S/P/P/C/S/P/P/P/C/...
  A speaker might not express what they think of the topic, and the listener might not express why they want to know, both of which would be given by the private path.

Diagraphic addresses
  Diagraphic nodes have addresses in a particular diagraph.
  Diagraphic nodes have one primary and many secondary addresses.
  The primary address is the path from the key where a node is actually stored in a diagraph to that node.
  A secondary address is a path from some other key that advances through aliases.
  Public-language nodes may have a generally agreed upon public-language address. 

Diagraphic references
  A diagraphic reference is a correspondance between a node and a key. 
  Explanations of references or subelements of a clause during an existing explanation are asides.
  There are no topic-topic edges, only topic-sentence pairs in which the sentence contains an explicit reference to a different topic. 
  References are explained by their context.

Diagraphic priority
  A diagraph has a mode of priority, which is a total ordering of the nodes of that diagraph.
  Diagaphs are hierarchial, and children of a parent have a relative syntactic rank.
    In particular diagraph the order is: 
      'Subject
        Classification (is a)
        Description (is)
          Adverbal phrases 
          Conjunctions 
          New sentences
    Elements of a type must be ranked by some further criterion.
      In a functional diagraph, priority is relative to function or usefulness in a particular circumstance.
      In a descriptive diagraph, priority might be relative to something like frequency.
      An ideograph is ranked by hierarchy and subsumption.
    Specifications are contingent, so if particular A is parent of particular B, A -/> B. 
    Classifications are high-priority, and so interpretations are often passed off as classifications.
    In generic diagraph, predicate children imply predicate parents.
  "He is the" has priority over "he is a"
  Rank expresses, for example, which of two contributions that were not related would come first in an explanation.
  There cannot be an uncontroversial diagraph prioritization because even if ordering is something unobjectionable like linguistic frequency, there would still be disagreements over which things are classifications and which are interpretations attached to a description by a lower-priorty conjunction.
  Means of diagraphic priority
    Lexical frequency
    Voting
    Secondary source citations
    Google hits



Kinds of diagraph
Prose diagraph
  A prose diagraph embeds a selective traversal of a particular diagraph interpreted with a generic diagraph into a hierarchial series of utterances from a voice with a particular tone, self-aware of the transission. 
  Narrative prose is the most efficient form of diagraph transission, because it can impart the generic, the particular, a perspective, and a style, all at the same time like several overlapping concentric circles.
  Prose is also the least resilient, least modular form of diagraph, because it cannot easily incorperate new information, and a fault with any one aspect renders the whole undesirable.
  A clause of a prose diagraph corresponds to a clause of particular diagraph, and a series of generic clauses of increasing abstraction. 
  Producing a prose diagraph may cause someone to impart to themselves the generic and particular diagraph.
  A prose diagraph is a conscious utterance, to a particular audience, as opposed to particular or generic diagraph, which is just a platonic mesh of facts and interpretations.
  Particular and generic diagraph are almost never explicitly represented outside of the context of particular prose traversals, because this is what you would do if paper were scarce and you expected everyone to read everything anyway because there wasn't very much of it. 
  The prose keys of a diagraph have quotes, whereas particular and generic keys are just strings.

Particlar diagraph
  Diagraph concerning singular subjects. 
  The roots of particular categories instantiate with reference to a generic. 
    All children of the particular must correspond to generically sanctioned predicates. 
  An explicit representation of a particular diagraph contains an implicit representation of a generic diagraph.

Generic diagraph
  Generic diagraph is a generic subject and all possible predicates. 
  There is in some sense a single layer of particular diagraph, and then many nested layers of generic diagraph, all the way down to innate generics like someone, something, somewhere, etc.
  Generic trees begin with "there is" or "there are".
  Generic diagraph is useful in comparing two particular diagraphs, eg determining if predicate A in one diagraph means the same thing as predicate B in another.
  Generic subordination, eg, A/B, means all Bs are A but only some As are B.
  A schema or definition is a configuration of generic diagraph, of the form A/B/C/is a D.
  We represent generic diagraph only when a particular theory exerts complete explanatory power over a domain, and so we don't need any rich particulars, otherwise we explicitly represent particular diagraph & store the generic diagraph implicitly in the predicates of the particular.
  Generic diagraph is composed of generic subjects or concepts. 
  A diagraph might not need to define terms because they're in the generic diagraph.
  Long generic inheritance chains are produced through philosophy and taxonomy.

Generic clauses
  Generic clauses are things like "Dogs bark"
  Every particular clause is predicated on a generic clause.

Predication
  Every particular clause is predicated upon a generic clause, the abstraction of the particular clause. 
  A predication is an implicit correspondance between a particular predicate and a predicate of the generic type. 
  Predication of a generic address to a particular gives that particular an attribute that represents a state in an underlying generic DFA.
  A predication is a subject generic path pair.
  A derivation is a public language generic path specification.

Abstracting a clause
  I genericize a particular clause by finding the path of the generic clause that sanctions the use of the predicate. 
  For example, "Fifi gave birth to twins" -> "Dogs give birth to twins".
  This operation is used in diagraph-consider, and in generic diagraph formation by constantly abstracting from the particular cases we encounter.

Analogies
Analogy by shared classification
Analogy by shared description
Analogy by direct comparison



Describing diagraphs
  Diagraphs can have depth, if many nodes are the roots of lower trees.
  Diagraphs can have context, if many trees are nodes in higher trees.
  A diagraph can subsume another. 
    One diagraphic tree subsumes another if it contains a node that can be parent to the other's root.
  A diagraph can reduce one diagraph to another.
  A diagraph can be coherant if all paths belong to a single refactored tree.
  A diagraph has a certain number of stages
    The number of conjunctive layers at a particular point.
  Diagraph merges
    Two diagraphs are merged into one that contains the paths of both diagraphs, refactoring nodes that share prefixes. 
  Common configurations of diagraph
    Stories
    Locations

Diagraph specifications
Functional diagraph specifications
  Functional diagraph specifies the desired information by functional relation to something else.
  A functional diagraph specification is like a question, ie a partial path.
  Diagraphs can be described functionally without complete knowledge of their contents. 
  Functionally specified diagraph allows us to speak precisely about hypothetical diagraphs.
  Examples eg, human condition diagraph
Descriptive diagraph specifications
  A descriptive diagraph specification is like a topic, and therefore is imprecise.
  Descriptive specifications specify the desired information by describing an attribute of that information.
  A descriptive diagraph definition is like, the diagraph formed by a particular corpus of text.
  EG, Elsinore, Descent, Investigations

Discourse diagraphs
  A discourse diagraph is the hypothetical diagraph implicit in a corpus of text. 
  Responses to particular articulations are culled to produce an abstracted diagraph. 
  Any point made literally in a corpus.
  Prioritized by number of secondary sources that make the point.
  Learning to see prose not as a document that includes an assortment of sentences, but rather as a sequentialization of a partial traversal of a discourse diagraph.
Pedagogic diagraphs
  Diagraphs that contain every wrong explanation of something, and corrections.
Library diagraphs
  A library diagraph is a diagraph that subsumes various other diagraphs. 
  Last library, a dialectic conversation about everything.
Ideographs
  An ideograph represents the possible explanations of an individual. 
  An ideograph may contain scoped versions of other ideographs for reference. 
  The keys of my ideograph are the words that I recognize. 
Language diagraphs
  A langauge diagraph captures the generic information known to native speakers of a language.
  In a language diagraph, the paths cannot be very deep because of the entropy of ambiguous uses of terms as synonymic. 
    In an ideograph by comparison, there is no entropy across long lines of implicature, because there is no ambiguity about synonymity.
Culture diagraphs
  A culture diagraph represents the particular and generic diagraph common to a cultural group.
  A culture diagraph is the set of references and generics that a member of a group expects another member of the group to know and understand.
  A culture diagraph represents the states which an individual is likely to progress though. 
  The validity of a culture diagraph should be self-evident to any native, ie, for any given adjacency, the child really what would come to mind given the parent for any native -- that I would expect you to expect me to know about that association.



Thinking with diagraph
  What kind of things might be more easy to talk about in terms of diagraph? 
    The differences in explanation preformance between experts and non-experts.
    The ways in which we might compare directly the interfaces of different explanatory systems.
  Tag entropy
  Capsizing
  Ephemeral documents and feeds
  An adjacency in a diagraph is a thing that would bring to mind another thing in an explanation.
    So imagine the mind of the person who reads Twitter or the newspaper.
Describing education with diagraph

Describing media with diagraph
  How document-based media causes redundancy by having us rehash the same points over a new document, like an op-ed.
  How context in a news article might naively seem like aliased subtrees that belong primarily in other places, but really are custom made for the article's tree, children of references in a particular sentence, not a new explanation soley of the reference in its own right. 
Describing libraries with diagraph
Describing academia with diagraph
Describing wikipedia with diagraph
Describing individuals with diagraph
Describing chronology with diagraph
  Real time, stateful time, evolutionary time
    Being in a DFA, as opposed to being out of one.

Diabots
  A diabot is a diagraphic agent. 
  A diabot is an agent who is motivated to improve its ideograph.
  A diabot is an agent that represents its knowledge as a diagraph. 
  A diabot knows N if it has the node N. 
  A diabot understands P if it has the path P. 
  A diabot's ideograph of a particular topic is its understanding of that topic. 
Diabot dynamics
  We can predict how a diagraphic agent would behave, given that it seeks to expand its ideograph in certain predictible ways.
  How one would behave who wanted to gain as much diagraph as possible.



Using diagraph
  Preventing the redundant duplication of explanatory information in multiple documents. 
    Although, not all duplicated explanatory information is redundant, duplicating the same tree is redundant, but two tree might include the same fact but not the explanation. 
  Preventing information that is similar from becomming fragmented by division into seperate documents
  A diagraph could provide logarithmic-time lookup to a very large corpus of explanatory information.
Diagraph in Education
Diagraph in Journalism
  Just like the NYTs can report on a debate being had between academic bloggers, diagraph will sit on top of twitter and prose media, which sift and promote information upwards.
  Explainer journalism – having one continuous piece of content for the story and the analysis.
  Example of diagraph stages - articles and letters to the editor.
Diagraph in Politics
Diagraph in Library Science
  As alternative to coordinated ontologies, uncoordinated ordinary language classification. Emergent, pluralistic taxonomy. Like Google coordinated tagging app.
Diagraph in Academic Publishing
Diagraph in personal reading
  Whatever your opinion on what people should read, biases that are failures to trigger a potential interest are inefficiencies.
Diagraph as personal desktop/task manager




Producing diagraph
Writing a diagraph
  Discussion diagraph 
    Produces by consensus
    Every write is changable by both parties. 
    Like writing diagraph-script in a google doc.
    One party may change the paths of the contributions of another party.
    Vulnerable to filibustering.
    Vulnerable to normative description.
      Descriptive clauses should come before specifications and interpretations. By inserting a normative interpretation in the initial declaration, a party may violate that understanding.
    Requires all parties to agree on a shared generic diagraph, 
      in order to decide which inferences are acceptable.
      in order to decide which declarations are descriptive and which are interpretive.
    This method could be used by an organization with dispute resolution procedures, like a newspaper. 
  Debate diagraph
    Every write is submitted by only one party.
    Like a group of people submitting diagraph-script comments to a shared page, everyone can post what they want but no party may alter another party's post.
    No conrtibution may change the path of an existing contribution.
    Diagraph production in which individuals produce a discussion diagraph.
    A party that creates a terminal clause can write a composition, but another party may subdivide that terminal node causing explanation to pass over those compositions.
    Only parties who react to opponent arguments will end up with responsive compositions at every terminal point. 

Diagraph formation
  Tidal sort
    Alternating periods of solicitation to topic-buckets, culling, and subdividing.
    Tidal sort provides continuous improvements.
    Tidal sort requires prior knowledge of high-order clauses.
  Pile sort
    Iterative periods of solicitation to topic buckets, sorting by similarity and subdividing, then more solicitation, until all buckets have fewer than some threshold of notes, then the creation of note piles, which become clause node trees, then element node trees. 
    Pile sort requires a large initial cost.
    Pile sort might refactor several composite texts into one set of single purpose texts.



Representing diagraph
  Diagraph script
    Diagraph script is a text format that represents a diagraph. 
    Diagaph script is the canonical representation of a diagraph. 
      Other data structures merely implement the constructs of diagraph script.
    Lines of a diagraph script file represent nodes of a diagraph.
    Indendation in a diagraph script file represents the hierarchy of a diagraph. 
    Unindented lines of diagraph script represent the diagraphic paths which are the keys of the diagraph.
      The paths may not correspond exactly to the path-keys of the diagraph.
        A diagraph might be more modularly refactored, and the diagraph script intended for a wider audience. 
    Top-level indentations under a key represent the roots of a diagraphic category. 
    Diagraph script is comprised of blocks, section, and parts.
      A line of diagraph script is a diagraphic node or grammatical clause.
      A block of diagraph script is one atomic write operation.
        A block is like a diagraphic tree, or a grammatical subject.

        Blocks can be seperated by one blank line for clarity.
        Blocks would often begin at the indentation of the previous block. 
        A block of diagraph script might correspond to a prose paragraph.
        A diagraph script block captures a diagraphic root, its context, its specifications, and derivations of the generics used in that tree.
      A section of diagraph script is a set of related blocks. 
        A diagraph section is a diagraphic key or grammatical topic. 

        Sections can be seperated by two or three blank lines for clarity. 
        Sections would not usually begin indented. 
        A section of diagraph script might correspond to a prose article or chapter.
      A part is a set of sections that share a topic or theme.

        Parts are seperated by three blank lines.
    Multi-line compositions can be wraped in quotes.
    Diagraph script can be machine-interpretable, parsable, or displayable, but never readable. 

JSON representation of diagraph
  Strings in any primitive represent nodes, and any kind of nesting represents hierarchy.
  An element-node tree can be a javascript object, because no children of the same node should share a prefix. Otherwise, trees can be represented with string-array tuples.



Diagraphic functions
Diagraphic function environments
Diagraphic processes
Diagraphic threads
Diagraphic interfaces


Diagraph-Read
Diagraph-Edit
Diagraph-Add
Diagraph-Interpret
Diagraph-Explain
Diagraph-Assess
Diagraph-Review
Diagraph-Quiz
Diagraph-Consider
Diagraph-Reflect
  Interpretation in parts?




Other 
Propsecting
  Provisional compositions can become notes which can become sentences which can become either clause-trees or final compositions.
Qualitative computing
Moderation as merger not mean
The explanation market
  Market fragmentation between producers and consumers. 
Diagraph as epistemic algorithm
Diabots and personal reading
Exhaustive diagraphs, which invite and address every articulation of an idea possible in the language
Diagraphic dynamics
  How agents behave when diagraph transmission is so reliable and ubiquitous as to be inevitable. 
Ostensive diagraph
  A diagraphic node may ostend to a resource referenced by address.
Human assistants for composing diagraph script, eg customer support. 
Diagramatic explanation
  A visual the elements of which correspond to one or more diagraphic trees.
Arguments over competing narratives are arguments over suggested primary ideographic storage
A definition of wrongness that is relative to what one would think given more complete information
How creating a diagraph involves massive redundancy, enumerating for example every concievable way of articulating an idea, so that it is perfectly clear how you suggest the reader integrate it into their understanding.
  How there are no true synonyms in a diagraph, and so every identity between terms must be explicitly represented and justified. 
An explanation of Darwin of infinite length might include an explanation of England of infinite length, but not every fact about England would be germane to that explanation.
Analogies
  Are compositions stored in subtrees analogies? Or are they like in only one respect, whereas an analogy is a direct comparison of likeness? "A is B. C is an example of B." vs. "A is like C"
Intellectual virtue
  Having a reason besides ignorance for choosing where your diagraph will end
How one can infer from the exact relevance of examples and analogies the resolution of one's ideolect.
Moral intuitions as a finite set of innate interpretations that are naturally and generatively triggered by complete description, and so morality as a requirement to solicit the information that would give one's moral intuitions the chance to be triggered. An argument for moral intuitions of greater informational content, rather than a difference in kind. Moral intuitions as judgements, propositional to the degree that any ordinary language.
Moral discourse doesn't required a shared vocabulary or theory.
Moral discourse is descriptive.  
How can you merge texts? 
  How can we reason about the individual who has read two texts?
Ellaborative encoding, using people's quotes as compositions of particular views.
One uses one's linguistic sense to navigate a diagraph.
Learning to read things for which you are not the target audience. 
The point is to create a standardized interface to represent interactions with things like books, search engines, and human teachers, to show how they satisfy the same sorts of requests functionally specified, and allow direct comparisons.