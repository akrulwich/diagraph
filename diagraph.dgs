This is an introduction to the diagraphic format. 




What is diagraph?
  A diagraph is a medium of explanation.
  A diagraph is a representation of an explanatory system.



  A diagraph is a hierarchial sentence-store.



Diagraph Schema:

+----+------+-------+---------+------------+-----------+--------+
| id | Text | Topic | Subject | Antecedent | Prototype | Object |
+----+------+-------+---------+------------+-----------+--------+
|    |      |       |         |            |           |        |
+----+------+-------+---------+------------+-----------+--------+




What does the node / node text represent?
  The nodes of a diagraph are the units of explanation, ways in which two explanations could differ on an informational basis, sentences which could meaningfully stand alone.
  Nodes do not represent syntactic units.
  The text of a node represents the same information as do the foreign keys.
  Diagraph represents thoughts as individual sentences, as opposed to using compound sentences to represent several thoughts.




Why do multiple nodes reiterate the same information?
  -movie frames analogy


What does topic represent? 
  situation, surroundings, motivation
  examples, illustrations, members, demonstrations
What does subject represent?
  
  reponses, comments
What does antecedent represent?
  cause, reason, explanation, justification, evidence
  effects, consequents, consequences, progeny
What does prototype represent? 
  Kind, abstracts, ideas 
  Instances, articulations







What is an explanation? 
  An explanation is a traversal of the nodes of a topic.







Common configurations of diagraph 
-subject embedding
-topic nesting
-example of node with subject & prototype
--The existance of a no-text node with particular foreign keys, eg subject & prototype, has a particular meaning.
-example of adding something to the I/This topic to publish it
  -the difference between what is true of X and what is true of me, vis what I think of X, & that in diagraph they can be different.
-dialog, utterance nodes where the subject is other utterance nodes
-indexing facts with text topics, like legal codes.
-stories
-locations
-what we might call the reciprocal names of the different foreign keys (eg examples/interpretations/etc)
-notes, ie multi-sentence nodes that are not published to the I/This identity topic. 
-how chronology is a kind of secondary index of a set of platonic facts about things.
-napoleon and louisiana
-I know [P] because [evidence] -- a subject/antecedent pair can represent epistemic justification
-Using two nested arguments to create an indirect object 
-Question topics which contain illustrations, question subjects with responses which are answers.






Applications of diagraph / Describing things as diagraphs
-tag entropy
  -a reference is entropic if it does not soley belong to the prior resource, meaning it must be relevant for multiple contexts. Explanations are generally combinatorially specific.
-capsizing, when the index needs an index
-The problem with prose 
  (& serialization attempts like the dewey decimal system)
-Describing libraries as diagraph
  -A library in which the indexes were continuous with the content.
-Describing academia as diagraph
-Describing wikipedia as diagraph
-describing ephemeral media as utterances prototyping the same abstract sentences.





Diagraph script
  Diagraph script represents sentences with explicit relations to other sentences.

  S
    Relation: 
      S
    Relation:
      S



Diagraph servers

  host.org/diagraph/sentence (?N=2) -- returns all adjacencies within N
  Query string N argument - can request max, & receive less if refused.
  Get for read, post for edit
  Returns nested JSON.






Diagraphic interfaces
  The interactive interface
    The interactive interface permits search and browse.
    The interactive interface displays text sentence by sentence like a slide-deck.
    The interactive interface builds a local session store that can be flexibly searched.

    Visit S:
    -state S
    -visit sentences with subject S
    -visit sentences antecedent to S
    -visit sentences of topic S

    Each visitation is on a stack, more pushes to the stack, next advances the current item, continue pops the stack.
    Down - more
    Left - next
    Return - continue


    The URL fragment represents additional client-side query information.

  The correspondance interface
    Each click returns a JSON request which is appended to the DOM, creating a chronological sequence.

  The static interface
    Simply displays all sentences of the payload with hyperlinks to their sentences pages.








Producing diagraph
-what does a diagraph look like through every provisional stage of pile sort/tidal sort






